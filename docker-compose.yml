version: '3.8'

services:
  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./uploads:/usr/share/nginx/html/uploads
    depends_on:
      - app
    networks:
      - app-network
    restart: always

  # Main Application - Horizontally scalable with multiple replicas
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URI=mongodb://mongo:27017/sourcecomputer
      - SESSION_SECRET=your_session_secret
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      # Google OAuth Environment Variables
      - GOOGLE_CLIENT_ID=16788479489-8sehea2kcf4bq6j2bf6c5vak4p0tuhnt.apps.googleusercontent.com
      - GOOGLE_CLIENT_SECRET=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
      - GOOGLE_CALLBACK_URL=http://localhost/auth/google/callback
      # Email configuration
      - EMAIL_USER=lexa61313@gmail.com
      - EMAIL_PASSWORD=dobd uiws oupm hixj
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    deploy:
      replicas: 2  # Run 2 instances of the app for horizontal scaling
      restart_policy:
        condition: on-failure
    networks:
      - app-network
    depends_on:
      - mongo
      - redis

  # Database Service
  mongo:
    image: mongo:6.0
    volumes:
      - mongo-data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    ports:
      - "27017:27017"
    restart: always
    environment:
      - MONGO_INITDB_DATABASE=sourcecomputer
    networks:
      - app-network

  # Redis for session store and caching
  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
  redis-data:
