<%- include('../partials/sidebar') %>

<div class="admin-content">
    <div class="admin-header">
        <h1>Thông tin chi tiết người dùng</h1>
        <div class="admin-header-actions">
            <a href="/admin/user" class="btn btn-primary"><i class="fas fa-arrow-left"></i> Quay lại</a>
            
            <% if (!user.isBanned) { %>
                <button class="btn btn-danger" id="banUserBtn">
                    <i class="fas fa-ban"></i> Khóa tài khoản
                </button>
            <% } else { %>
                <button class="btn btn-success" id="unbanUserBtn">
                    <i class="fas fa-unlock"></i> Mở khóa tài khoản
                </button>
            <% } %>
        </div>
    </div>
    
    <div class="row">
        <div class="col-md-6">
            <div class="admin-card">
                <div class="card-header">
                    <h3>Thông tin tài khoản</h3>
                </div>
                <div class="card-body">
                    <table class="detail-table">
                        <tr>
                            <th>ID:</th>
                            <td><%= user._id %></td>
                        </tr>
                        <tr>
                            <th>Tên:</th>
                            <td><%= user.name %></td>
                        </tr>
                        <tr>
                            <th>Email:</th>
                            <td><%= user.email %></td>
                        </tr>
                        <tr>
                            <th>Vai trò:</th>
                            <td>
                                <div class="role-selector">
                                    <select id="roleSelect">
                                        <option value="customer" <%= user.role === 'customer' ? 'selected' : '' %>>Khách hàng</option>
                                        <option value="admin" <%= user.role === 'admin' ? 'selected' : '' %>>Quản trị viên</option>
                                    </select>
                                    <button id="updateRoleBtn" class="btn btn-sm btn-primary">Cập nhật</button>
                                </div>
                            </td>
                        </tr>
                        <tr>
                            <th>Trạng thái:</th>
                            <td>
                                <span class="status-badge <%= user.isBanned ? 'banned' : 'active' %>">
                                    <%= user.isBanned ? 'Đã khóa' : 'Đang hoạt động' %>
                                </span>
                            </td>
                        </tr>
                        <tr>
                            <th>Ngày đăng ký:</th>
                            <td><%= new Date(user.createdAt).toLocaleString('vi-VN') %></td>
                        </tr>
                        <tr>
                            <th>Đăng nhập qua Google:</th>
                            <td><%= user.googleId ? 'Có' : 'Không' %></td>
                        </tr>
                        <tr>
                            <th>Điểm tích lũy:</th>
                            <td><%= user.loyaltyPoints || 0 %> điểm</td>
                        </tr>
                    </table>
                </div>
            </div>

            <!-- Địa chỉ của người dùng -->
            <div class="admin-card mt-4">
                <div class="card-header">
                    <h3>Địa chỉ (<%= user.addresses ? user.addresses.length : 0 %>)</h3>
                </div>
                <div class="card-body">
                    <% if (user.addresses && user.addresses.length > 0) { %>
                        <div class="address-list">
                            <% user.addresses.forEach((address, index) => { %>
                                <div class="address-item <%= address.default ? 'default' : '' %>">
                                    <% if (address.default) { %>
                                        <span class="default-badge">Mặc định</span>
                                    <% } %>                                    <div class="address-details">
                                        <p><strong>Địa chỉ <%= index + 1 %>:</strong> <%= address.street %></p>
                                        <p><strong>Quận/Huyện:</strong> <%= address.district %></p>
                                        <p><strong>Tỉnh/Thành phố:</strong> <%= address.province %></p>
                                        <% if (address.default) { %>
                                            <p><strong>Mặc định:</strong> Có</p>
                                        <% } %>
                                    </div>
                                </div>
                            <% }) %>
                        </div>
                    <% } else { %>
                        <p class="no-data">Người dùng chưa có địa chỉ nào.</p>
                    <% } %>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <!-- Đơn hàng gần đây -->
            <div class="admin-card">
                <div class="card-header">
                    <h3>Đơn hàng gần đây</h3>
                </div>
                <div class="card-body">
                    <% if (orders && orders.length > 0) { %>
                        <table class="data-table">
                            <thead>
                                <tr>
                                    <th>Mã đơn hàng</th>
                                    <th>Ngày đặt</th>
                                    <th>Tổng tiền</th>
                                    <th>Trạng thái</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <% orders.forEach(order => { %>
                                    <tr>
                                        <td><%= order.orderNumber %></td>
                                        <td><%= new Date(order.createdAt).toLocaleDateString('vi-VN') %></td>
                                        <td><%= order.totalAmount.toLocaleString('vi-VN') %> ₫</td>
                                        <td>
                                            <span class="status-badge <%= order.status %>">
                                                <% let statusText; %>
                                                <% switch(order.status) { 
                                                    case 'processing': statusText = 'Đang xử lý'; break;
                                                    case 'confirmed': statusText = 'Đã xác nhận'; break;
                                                    case 'shipped': statusText = 'Đang giao hàng'; break;
                                                    case 'delivered': statusText = 'Đã giao hàng'; break;
                                                    case 'cancelled': statusText = 'Đã hủy'; break;
                                                    default: statusText = order.status;
                                                } %>
                                                <%= statusText %>
                                            </span>
                                        </td>
                                        <td class="actions">
                                            <a href="/admin/orders/<%= order._id %>" class="btn btn-sm btn-outline-primary">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                        
                        <div class="view-all">
                            <a href="/admin/orders?user=<%= user._id %>">Xem tất cả đơn hàng của người dùng này</a>
                        </div>
                    <% } else { %>
                        <p class="no-data">Người dùng chưa có đơn hàng nào.</p>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const userId = '<%= user._id %>';
    
    // Cập nhật vai trò
    document.getElementById('updateRoleBtn').addEventListener('click', function() {
        const role = document.getElementById('roleSelect').value;
        
        fetch(`/admin/user/${userId}/role`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ role })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('Vai trò người dùng đã được cập nhật thành công.');
            } else {
                alert('Đã xảy ra lỗi: ' + data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Đã xảy ra lỗi khi cập nhật vai trò người dùng.');
        });
    });
    
    // Khóa tài khoản
    const banUserBtn = document.getElementById('banUserBtn');
    if (banUserBtn) {
        banUserBtn.addEventListener('click', function() {
            if (confirm('Bạn có chắc chắn muốn khóa tài khoản này không?')) {
                updateUserStatus('banned');
            }
        });
    }
    
    // Mở khóa tài khoản
    const unbanUserBtn = document.getElementById('unbanUserBtn');
    if (unbanUserBtn) {
        unbanUserBtn.addEventListener('click', function() {
            if (confirm('Bạn có chắc chắn muốn mở khóa tài khoản này không?')) {
                updateUserStatus('active');
            }
        });
    }
      function updateUserStatus(status) {
        fetch(`/admin/users/${userId}/status`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ status })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert(data.message);
                location.reload(); // Reload the page to reflect changes
            } else {
                alert('Đã xảy ra lỗi: ' + data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Đã xảy ra lỗi khi cập nhật trạng thái người dùng.');
        });
    }
});
</script>

<style>
    :root {
      --primary-color: #2196F3;
      --primary-color-dark: #1769aa;
      --success-color: #4CAF50;
      --danger-color: #F44336;
      --warning-color: #FFC107;
      --info-color: #3498DB;
      --shipped-color: #9C27B0;
      --text-color-dark: #23272E;
      --text-color-muted: #6B7280;
      --border-color-light: #E0E0E0;
      --border-radius-md: 8px;
      --font-family-sans: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
      --font-size-base: 1rem;
      --font-size-sm: 0.875rem;
      --font-weight-medium: 500;
      --font-weight-semibold: 600;
      --spacing-xs: 0.5rem;
      --spacing-sm: 0.75rem;
      --spacing-md: 1rem;
      --spacing-lg: 1.5rem;
      --spacing-xl: 2rem;
      --transition-short: 0.2s;
    }

    body {
      font-family: var(--font-family-sans);
      color: var(--text-color-dark);
      background-color: #f9fafb;
      margin: 0;
      padding: var(--spacing-lg);
    }

    .admin-content {
      max-width: 1100px;
      margin: 0 auto;
    }

    /* Header */
    .admin-header {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
      align-items: center;
      margin-bottom: var(--spacing-xl);
      gap: var(--spacing-md);
    }

    .admin-header h1 {
      font-size: 1.75rem;
      font-weight: var(--font-weight-semibold);
      margin: 0;
      color: var(--text-color-dark);
    }

    .admin-header-actions {
      display: flex;
      align-items: center;
      gap: var(--spacing-sm);
      flex-wrap: wrap;
    }

    .btn {
      display: inline-flex;
      align-items: center;
      gap: 0.5em;
      padding: 0.5em 1em;
      font-size: var(--font-size-base);
      font-weight: var(--font-weight-semibold);
      border-radius: var(--border-radius-md);
      cursor: pointer;
      border: none;
      transition: background-color var(--transition-short), color var(--transition-short);
      user-select: none;
      text-decoration: none;
      color: white;
      background-color: var(--primary-color);
    }

    .btn i {
      font-size: 1rem;
    }

    .btn-primary {
      background-color: var(--primary-color);
    }

    .btn-primary:hover,
    .btn-primary:focus {
      background-color: var(--primary-color-dark);
      outline: none;
    }

    .btn-danger {
      background-color: var(--danger-color);
    }

    .btn-danger:hover,
    .btn-danger:focus {
      background-color: #b32b27;
      outline: none;
    }

    .btn-success {
      background-color: var(--success-color);
    }

    .btn-success:hover,
    .btn-success:focus {
      background-color: #3a8d3a;
      outline: none;
    }

    /* Layout grid */
    .row {
      display: flex;
      flex-wrap: wrap;
      gap: var(--spacing-xl);
    }

    .col-md-6 {
      flex: 1 1 48%;
      min-width: 300px;
    }

    /* Card */
    .admin-card {
      background-color: white;
      border-radius: var(--border-radius-md);
      box-shadow: 0 1px 6px rgba(0, 0, 0, 0.1);
      padding: var(--spacing-lg);
      display: flex;
      flex-direction: column;
      gap: var(--spacing-md);
    }

    .card-header {
      border-bottom: 1px solid var(--border-color-light);
      padding-bottom: 0.5rem;
    }

    .card-header h3 {
      margin: 0;
      font-size: 1.25rem;
      font-weight: var(--font-weight-semibold);
      color: var(--text-color-dark);
    }

    /* Detail table */
    .detail-table {
      width: 100%;
      border-collapse: collapse;
    }

    .detail-table th,
    .detail-table td {
      padding: 10px 12px;
      vertical-align: top;
      text-align: left;
      border-bottom: 1px solid var(--border-color-light);
      font-size: var(--font-size-base);
    }

    .detail-table th {
      width: 35%;
      font-weight: var(--font-weight-semibold);
      color: var(--text-color-dark);
      white-space: nowrap;
    }

    /* Role selector */
    .role-selector {
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .role-selector select {
      padding: 6px 10px;
      font-size: var(--font-size-base);
      border: 1px solid var(--border-color-light);
      border-radius: var(--border-radius-md);
      background-color: white;
      color: var(--text-color-dark);
      transition: border-color var(--transition-short), box-shadow var(--transition-short);
      cursor: pointer;
    }

    .role-selector select:focus {
      outline: none;
      border-color: var(--primary-color);
      box-shadow: 0 0 0 3px rgba(33, 150, 243, 0.3);
    }

    /* Address list */
    .address-list {
      display: grid;
      gap: var(--spacing-md);
    }

    .address-item {
      position: relative;
      background-color: #f9f9f9;
      border: 1px solid var(--border-color-light);
      border-radius: var(--border-radius-md);
      padding: var(--spacing-md);
    }

    .address-item.default {
      border-color: var(--success-color);
      background-color: #e6f4ea;
    }

    .default-badge {
      position: absolute;
      top: 10px;
      right: 10px;
      background-color: var(--success-color);
      color: white;
      padding: 2px 8px;
      font-size: 0.75rem;
      font-weight: var(--font-weight-semibold);
      border-radius: 9999px;
      user-select: none;
    }

    .address-details p {
      margin: 4px 0;
      font-size: var(--font-size-base);
      color: var(--text-color-dark);
    }

    /* No data */
    .no-data {
      font-style: italic;
      color: var(--text-color-muted);
      text-align: center;
      padding: var(--spacing-lg) 0;
    }

    /* Status and role badges */
    .role-badge,
    .status-badge {
      display: inline-block;
      padding: 4px 12px;
      border-radius: 9999px;
      font-size: 0.85rem;
      font-weight: var(--font-weight-semibold);
      user-select: none;
      white-space: nowrap;
    }

    .role-badge.admin {
      background-color: var(--primary-color);
      color: white;
    }

    .role-badge.customer {
      background-color: var(--success-color);
      color: white;
    }

    .status-badge.active {
      background-color: var(--success-color);
      color: white;
    }

    .status-badge.banned {
      background-color: var(--danger-color);
      color: white;
    }

    .status-badge.processing {
      background-color: var(--warning-color);
      color: #333;
    }

    .status-badge.confirmed {
      background-color: var(--primary-color);
      color: white;
    }

    .status-badge.shipped {
      background-color: var(--shipped-color);
      color: white;
    }

    .status-badge.delivered {
      background-color: var(--success-color);
      color: white;
    }

    .status-badge.cancelled {
      background-color: var(--danger-color);
      color: white;
    }

    /* Orders table */
    .data-table {
      width: 100%;
      border-collapse: collapse;
      font-size: var(--font-size-base);
      color: var(--text-color-dark);
      min-width: 600px;
    }

    .data-table thead tr {
      background-color: var(--border-color-light);
    }

    .data-table th,
    .data-table td {
      padding: 0.75rem 1rem;
      border-bottom: 1px solid var(--border-color-light);
      text-align: left;
      vertical-align: middle;
      white-space: nowrap;
    }

    .data-table th {
      font-weight: var(--font-weight-semibold);
    }

    .data-table tbody tr:nth-child(even) {
      background-color: #f9fafb;
    }

    .data-table tbody tr:hover {
      background-color: #f1f5f9;
      transition: background-color var(--transition-short);
    }

    /* Actions */
    .actions {
      display: flex;
      gap: 0.5rem;
      justify-content: center;
    }

    .btn-sm {
      font-size: 0.8rem;
      padding: 0.25em 0.5em;
    }

    .btn-outline-primary {
      background-color: transparent;
      color: var(--primary-color);
      border: 1px solid var(--primary-color);
      border-radius: var(--border-radius-md);
      cursor: pointer;
      transition: background-color var(--transition-short), color var(--transition-short);
      display: inline-flex;
      align-items: center;
      justify-content: center;
    }

    .btn-outline-primary:hover,
    .btn-outline-primary:focus {
      background-color: var(--primary-color);
      color: white;
      outline: none;
    }

    /* Responsive */
    @media (max-width: 768px) {
      .admin-header {
        flex-direction: column;
        align-items: flex-start;
        gap: var(--spacing-md);
      }

      .admin-header-actions {
        justify-content: flex-start;
        width: 100%;
      }

      .role-selector {
        flex-wrap: wrap;
        gap: 0.5rem;
      }

      .role-selector select,
      .role-selector button {
        flex: 1 1 auto;
        min-width: 120px;
      }

      .data-table {
        min-width: 100%;
        font-size: 0.9rem;
      }

      .data-table th,
      .data-table td {
        padding: 0.5rem 0.75rem;
        white-space: normal;
      }

      .actions {
        justify-content: flex-start;
      }
    }
  </style>