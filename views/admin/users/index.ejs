<%- include('../partials/sidebar') %>

<div class="admin-content">
    <div class="admin-header">
        <h1>Quản lý người dùng</h1>
        <div class="admin-header-actions">
            <form action="/admin/users" method="GET" class="filter-group" style="gap:1rem;">
                <input type="text" name="search" placeholder="Tìm theo tên, email..." value="<%= filter.search || '' %>">
                <select name="role">
                    <option value="">Tất cả vai trò</option>
                    <option value="customer" <%= filter.role === 'customer' ? 'selected' : '' %>>Khách hàng</option>
                    <option value="admin" <%= filter.role === 'admin' ? 'selected' : '' %>>Quản trị viên</option>
                </select>
                <select name="status">
                    <option value="">Tất cả trạng thái</option>
                    <option value="active" <%= filter.status === 'active' ? 'selected' : '' %>>Đang hoạt động</option>
                    <option value="banned" <%= filter.status === 'banned' ? 'selected' : '' %>>Đã khóa</option>
                </select>
                <button type="submit" class="btn btn-primary">Tìm kiếm</button>
            </form>
        </div>
    </div>
    
    <div class="admin-card">
        <div class="card-header">
            <h3>Danh sách người dùng (<%= totalUsers %>)</h3>
        </div>
        <div class="card-body">
            <div class="table-responsive" style="overflow-x:auto;">
                <table class="data-table user-table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Tên</th>
                            <th>Email</th>
                            <th>Vai trò</th>
                            <th>Ngày đăng ký</th>
                            <th>Trạng thái</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% users.forEach(user => { %>
                            <tr>
                                <td><%= user._id %></td>
                                <td><%= user.name %></td>
                                <td><%= user.email %></td>
                                <td>
                                    <span class="role-badge <%= user.role %>">
                                        <%= user.role === 'admin' ? 'Quản trị viên' : 'Khách hàng' %>
                                    </span>
                                </td>
                                <td><%= new Date(user.createdAt).toLocaleDateString('vi-VN') %></td>
                                <td>
                                    <span class="status-badge <%= user.isBanned ? 'banned' : 'active' %>">
                                        <%= user.isBanned ? 'Đã khóa' : 'Đang hoạt động' %>
                                    </span>
                                </td>
                                <td class="actions">
                                    <a href="/admin/users/<%= user._id %>" class="btn btn-sm btn-outline-primary">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <button class="btn btn-sm btn-outline-<%= user.isBanned ? 'success' : 'danger' %> toggle-user-status" 
                                        data-user-id="<%= user._id %>" 
                                        data-current-status="<%= user.isBanned ? 'banned' : 'active' %>">
                                        <i class="fas <%= user.isBanned ? 'fa-unlock' : 'fa-ban' %>"></i>
                                    </button>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
            
            <% if (totalPages > 1) { %>
                <div class="pagination">
                    <% if (currentPage > 1) { %>
                        <a href="/admin/users?page=<%= currentPage - 1 %><%= filter.search ? `&search=${filter.search}` : '' %><%= filter.role ? `&role=${filter.role}` : '' %><%= filter.status ? `&status=${filter.status}` : '' %>" class="page-link">Trước</a>
                    <% } %>
                    
                    <% for(let i = 1; i <= totalPages; i++) { %>
                        <a href="/admin/users?page=<%= i %><%= filter.search ? `&search=${filter.search}` : '' %><%= filter.role ? `&role=${filter.role}` : '' %><%= filter.status ? `&status=${filter.status}` : '' %>" 
                           class="page-link <%= i === currentPage ? 'active' : '' %>"><%= i %></a>
                    <% } %>
                    
                    <% if (currentPage < totalPages) { %>
                        <a href="/admin/users?page=<%= currentPage + 1 %><%= filter.search ? `&search=${filter.search}` : '' %><%= filter.role ? `&role=${filter.role}` : '' %><%= filter.status ? `&status=${filter.status}` : '' %>" class="page-link">Tiếp</a>
                    <% } %>
                </div>
            <% } %>
        </div>
    </div>
</div>

<style>
    :root {
      --primary-color: #2196f3;
      --primary-color-dark: #0066cc;
      --success-color: #4caf50;
      --danger-color: #f44336;
      --warning-color: #ff9800;
      --info-color: #3498db;
      --text-color-dark: #23272e;
      --text-color-muted: #6b7280;
      --border-color-light: #e5e7eb;
      --border-color-medium: #d1d5db;
      --border-radius-md: 8px;
      --font-family-sans: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
      --font-size-base: 1rem;
      --font-size-sm: 0.875rem;
      --font-weight-medium: 500;
      --font-weight-semibold: 600;
      --transition-short: 0.2s;
      --spacing-xs: 0.5rem;
      --spacing-sm: 0.75rem;
      --spacing-md: 1rem;
      --spacing-lg: 1.5rem;
      --spacing-xl: 2rem;
    }

    body {
      font-family: var(--font-family-sans);
      color: var(--text-color-dark);
      background-color: #f9fafb;
      margin: 0;
      padding: var(--spacing-lg);
    }

    .admin-content {
      max-width: 1200px;
      margin: 0 auto;
    }

    /* Header */
    .admin-header {
      display: flex;
      flex-wrap: wrap;
      justify-content: space-between;
      align-items: center;
      margin-bottom: var(--spacing-xl);
      gap: var(--spacing-md);
    }

    .admin-header h1 {
      font-size: 1.75rem;
      font-weight: var(--font-weight-semibold);
      margin: 0;
      color: var(--text-color-dark);
    }

    .admin-header-actions {
      flex: 1 1 auto;
      display: flex;
      justify-content: flex-end;
      gap: var(--spacing-sm);
      flex-wrap: wrap;
    }

    /* Filter form */
    form.filter-group {
      display: flex;
      flex-wrap: wrap;
      gap: var(--spacing-sm);
      width: 100%;
      max-width: 600px;
    }

    form.filter-group input[type="text"],
    form.filter-group select {
      flex: 1 1 150px;
      padding: 0.5em 0.75em;
      font-size: var(--font-size-base);
      border: 1px solid var(--border-color-medium);
      border-radius: var(--border-radius-md);
      transition: border-color var(--transition-short), box-shadow var(--transition-short);
      background-color: white;
      color: var(--text-color-dark);
    }

    form.filter-group input[type="text"]::placeholder {
      color: var(--text-color-muted);
    }

    form.filter-group input[type="text"]:focus,
    form.filter-group select:focus {
      outline: none;
      border-color: var(--primary-color);
      box-shadow: 0 0 0 3px rgba(33, 150, 243, 0.3);
    }

    form.filter-group button.btn-primary {
      background-color: var(--primary-color);
      color: white;
      border: none;
      padding: 0.5em 1.25em;
      font-weight: var(--font-weight-semibold);
      font-size: var(--font-size-base);
      border-radius: var(--border-radius-md);
      cursor: pointer;
      transition: background-color var(--transition-short);
      flex: 0 0 auto;
    }

    form.filter-group button.btn-primary:hover,
    form.filter-group button.btn-primary:focus {
      background-color: var(--primary-color-dark);
      outline: none;
    }

    /* Card */
    .admin-card {
      background-color: white;
      border-radius: var(--border-radius-md);
      box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
      padding: var(--spacing-lg);
      margin-bottom: var(--spacing-xl);
    }

    .card-header {
      border-bottom: 1px solid var(--border-color-light);
      margin-bottom: var(--spacing-md);
      padding-bottom: 0.5rem;
    }

    .card-header h3 {
      margin: 0;
      font-size: 1.25rem;
      font-weight: var(--font-weight-semibold);
      color: var(--text-color-dark);
    }

    /* Table */
    .table-responsive {
      width: 100%;
      overflow-x: auto;
    }

    table.data-table {
      width: 100%;
      border-collapse: collapse;
      font-size: var(--font-size-base);
      color: var(--text-color-dark);
      min-width: 700px;
    }

    table.data-table thead tr {
      background-color: var(--border-color-light);
    }

    table.data-table th,
    table.data-table td {
      padding: 0.75rem 1rem;
      border-bottom: 1px solid var(--border-color-medium);
      text-align: left;
      vertical-align: middle;
      white-space: nowrap;
    }

    table.data-table th {
      font-weight: var(--font-weight-semibold);
      color: var(--text-color-dark);
    }

    table.data-table tbody tr:nth-child(even) {
      background-color: #f9fafb;
    }

    table.data-table tbody tr:hover {
      background-color: #f1f5f9;
      transition: background-color var(--transition-short);
    }

    /* Role badges */
    .role-badge {
      display: inline-block;
      padding: 0.25em 0.75em;
      border-radius: 9999px;
      font-size: var(--font-size-sm);
      font-weight: var(--font-weight-semibold);
      color: white;
      user-select: none;
      white-space: nowrap;
    }

    .role-badge.admin {
      background-color: var(--primary-color);
    }

    .role-badge.customer {
      background-color: var(--success-color);
    }

    /* Status badges */
    .status-badge {
      display: inline-block;
      padding: 0.25em 0.75em;
      border-radius: 9999px;
      font-size: var(--font-size-sm);
      font-weight: var(--font-weight-semibold);
      user-select: none;
      white-space: nowrap;
      color: white;
    }

    .status-badge.active {
      background-color: var(--success-color);
    }

    .status-badge.banned {
      background-color: var(--danger-color);
    }

    /* Actions */
    .actions {
      display: flex;
      gap: 0.5rem;
      justify-content: center;
    }

    .btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: 0.3em;
      border-radius: var(--border-radius-md);
      padding: 0.3em 0.6em;
      font-size: var(--font-size-sm);
      font-weight: var(--font-weight-semibold);
      cursor: pointer;
      border: 1px solid transparent;
      transition: background-color var(--transition-short), color var(--transition-short), border-color var(--transition-short);
      user-select: none;
      text-decoration: none;
      color: var(--text-color-dark);
      background-color: #f3f4f6;
      border-color: #f3f4f6;
    }

    .btn-sm {
      font-size: 0.8rem;
      padding: 0.25em 0.5em;
    }

    .btn-outline-primary {
      background-color: transparent;
      color: var(--primary-color);
      border-color: var(--primary-color);
    }

    .btn-outline-primary:hover,
    .btn-outline-primary:focus {
      background-color: var(--primary-color);
      color: white;
      outline: none;
    }

    .btn-outline-danger {
      background-color: transparent;
      color: var(--danger-color);
      border-color: var(--danger-color);
    }

    .btn-outline-danger:hover,
    .btn-outline-danger:focus {
      background-color: var(--danger-color);
      color: white;
      outline: none;
    }

    .btn-outline-success {
      background-color: transparent;
      color: var(--success-color);
      border-color: var(--success-color);
    }

    .btn-outline-success:hover,
    .btn-outline-success:focus {
      background-color: var(--success-color);
      color: white;
      outline: none;
    }

    /* Responsive */
    @media (max-width: 768px) {
      .admin-header {
        flex-direction: column;
        align-items: flex-start;
        gap: var(--spacing-md);
      }

      .admin-header-actions {
        justify-content: flex-start;
        width: 100%;
      }

      form.filter-group {
        max-width: 100%;
      }

      table.data-table {
        min-width: 100%;
        font-size: 0.9rem;
      }

      table.data-table th,
      table.data-table td {
        padding: 0.5rem 0.75rem;
        white-space: normal;
      }

      .actions {
        justify-content: flex-start;
      }
    }
  </style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const toggleStatusBtns = document.querySelectorAll('.toggle-user-status');
        
        toggleStatusBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                const userId = this.dataset.userId;
                const currentStatus = this.dataset.currentStatus;
                const newStatus = currentStatus === 'active' ? 'banned' : 'active';
                
                if (confirm(`Bạn có chắc chắn muốn ${newStatus === 'active' ? 'mở khóa' : 'khóa'} người dùng này không?`)) {
                    fetch(`/admin/users/${userId}/status`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ status: newStatus })
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Update UI
                            const row = this.closest('tr');
                            const statusCell = row.querySelector('td:nth-child(6) .status-badge');
                            statusCell.className = `status-badge ${newStatus}`;
                            statusCell.textContent = newStatus === 'active' ? 'Đang hoạt động' : 'Đã khóa';
                            
                            // Update button
                            this.dataset.currentStatus = newStatus;
                            this.className = `btn btn-sm btn-outline-${newStatus === 'active' ? 'danger' : 'success'} toggle-user-status`;
                            this.innerHTML = `<i class="fas ${newStatus === 'active' ? 'fa-ban' : 'fa-unlock'}"></i>`;
                            
                            alert(data.message);
                        } else {
                            alert('Đã xảy ra lỗi: ' + data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('Đã xảy ra lỗi khi cập nhật trạng thái người dùng.');
                    });
                }
            });
        });
    });
</script>