 <%- include('./partials/sidebar') %>
<div class="admin-layout">
   
    
    <div class="admin-content">
        <div class="admin-header">
            <h1>Dashboard</h1>
            <div class="admin-header-actions">
                <div class="date-filter">
                    <select id="date-range">
                        <option value="today">Hôm nay</option>
                        <option value="week">Tuần này</option>
                        <option value="month" selected>Tháng này</option>
                        <option value="year">Năm nay</option>
                        <option value="custom">Tùy chỉnh</option>
                    </select>
                    <div id="custom-date-range" style="display: none; margin-left: 10px;">
                        <input type="date" id="start-date" name="start-date">
                        <input type="date" id="end-date" name="end-date">
                        <button id="apply-custom-range" class="btn btn-sm btn-primary">Áp dụng</button>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="stats-grid">
            <div class="stat-card primary">
                <div class="label">Doanh thu</div>
                <div class="value"><%= totalRevenue.toLocaleString('vi-VN') %> ₫</div>
                <div class="change">+15% so với tháng trước</div>
            </div>
            
            <div class="stat-card success">
                <div class="label">Đơn hàng</div>
                <div class="value"><%= totalOrders %></div>
                <div class="change">+5% so với tháng trước</div>
            </div>
            
            <div class="stat-card warning">
                <div class="label">Khách hàng</div>
                <div class="value"><%= totalUsers %></div>
                <div class="change">+8% so với tháng trước</div>
            </div>
            
            <div class="stat-card danger">
                <div class="label">Đơn hàng chờ xử lý</div>
                <div class="value"><%= pendingOrders %></div>
                <div class="change">Cần xử lý ngay</div>
            </div>
        </div>
        
        <div class="row" style="display: flex; gap: 2rem; flex-wrap: wrap;">
            <div class="col-8" style="flex:2; min-width:320px;">
                <div class="admin-card">
                    <div class="card-header">
                        <h3>Doanh thu theo thời gian</h3>
                    </div>
                    <div class="card-body">
                        <canvas id="revenueChart"></canvas>
                    </div>
                </div>
            </div>
            
            <div class="col-4" style="flex:1; min-width:300px;">
                <div class="admin-card">
                    <div class="card-header">
                        <h3>Danh mục sản phẩm</h3>
                    </div>
                    <div class="card-body">
                        <canvas id="categoryChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="admin-card">
            <div class="card-header">
                <h3>Đơn hàng gần đây</h3>
            </div>
            <div class="card-body">
                <div class="table-responsive" style="overflow-x:auto;">
                    <table class="data-table dashboard-table">
                        <thead>
                            <tr>
                                <th>Mã đơn hàng</th>
                                <th>Khách hàng</th>
                                <th>Ngày đặt</th>
                                <th>Tổng tiền</th>
                                <th>Trạng thái</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <% recentOrders.forEach(order => { %>
                                <tr>
                                    <td><%= order.orderNumber %></td>
                                    <td><%= order.users ? order.users.name : 'Khách vãng lai' %></td>
                                    <td><%= new Date(order.createdAt).toLocaleDateString('vi-VN') %></td>
                                    <td><%= order.totalAmount.toLocaleString('vi-VN') %> ₫</td>
                                    <td>
                                        <span class="status-badge <%= order.status %>">
                                            <% let statusText; %>
                                            <% switch(order.status) { 
                                                case 'processing': statusText = 'Đang xử lý'; break;
                                                case 'confirmed': statusText = 'Đã xác nhận'; break;
                                                case 'shipped': statusText = 'Đang giao hàng'; break;
                                                case 'delivered': statusText = 'Đã giao hàng'; break;
                                                case 'cancelled': statusText = 'Đã hủy'; break;
                                                default: statusText = order.status;
                                            } %>
                                            <%= statusText %>
                                        </span>
                                    </td>
                                    <td class="actions">
                                        <a href="/admin/orders/<%= order._id %>" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                    </td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
                <div class="view-all">
                    <a href="/admin/orders">Xem tất cả đơn hàng</a>
                </div>
            </div>
        </div>
        
        <div class="admin-card">
            <div class="card-header">
                <h3>Sản phẩm bán chạy</h3>
            </div>
            <div class="card-body">
                <div class="table-responsive" style="overflow-x:auto;">
                    <table class="data-table dashboard-table">
                        <thead>
                            <tr>
                                <th>Sản phẩm</th>
                                <th>Danh mục</th>
                                <th>Giá</th>
                                <th>Đã bán</th>
                                <th>Tồn kho</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <% bestSellers.forEach(product => { %>
                                <tr>
                                    <td>
                                        <div class="product-cell">
                                            <% if (product.images && product.images.length > 0) { %>
                                                <img src="/uploads/products/<%= product.images[0] %>" alt="<%= product.name %>">
                                            <% } else { %>
                                                <img src="/images/no-image.png" alt="No Image">
                                            <% } %>
                                            <span><%= product.name %></span>
                                        </div>
                                    </td>
                                    <td><%= product.category %></td>
                                    <td><%= (product.discountPrice || product.price).toLocaleString('vi-VN') %> ₫</td>
                                    <td><%= product.sold %></td>
                                    <td><%= product.stock %></td>
                                    <td class="actions">
                                        <a href="/admin/products/edit/<%= product._id %>" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                    </td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
                <div class="view-all">
                    <a href="/admin/products">Xem tất cả sản phẩm</a>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Revenue chart
        let revenueChart, categoryChart;
        
        function initCharts(data = null) {
            const revenueData = {
                labels: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'],
                datasets: [{
                    label: 'Doanh thu (triệu đồng)',
                    data: data?.revenueData || [12, 19, 13, 15, 22, 27, 30, 35, 40, 45, 50, 55],
                    backgroundColor: 'rgba(52, 152, 219, 0.2)',
                    borderColor: 'rgba(52, 152, 219, 1)',
                    borderWidth: 2,
                    tension: 0.4
                }]
            };
            
            const revenueConfig = {
                type: 'line',
                data: revenueData,
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        title: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            };
            
            if (revenueChart) {
                revenueChart.destroy();
            }
            
            revenueChart = new Chart(
                document.getElementById('revenueChart'),
                revenueConfig
            );
            
            // Category chart
            const categoryData = {
                labels: ['Laptop', 'PC', 'Màn hình', 'Linh kiện', 'Phụ kiện'],
                datasets: [{
                    label: 'Số lượng sản phẩm',
                    data: data?.categoryData || [42, 28, 18, 35, 25],
                    backgroundColor: [
                        'rgba(52, 152, 219, 0.7)',
                        'rgba(46, 204, 113, 0.7)',
                        'rgba(241, 196, 15, 0.7)',
                        'rgba(230, 126, 34, 0.7)',
                        'rgba(231, 76, 60, 0.7)'
                    ],
                    borderColor: [
                        'rgba(52, 152, 219, 1)',
                        'rgba(46, 204, 113, 1)',
                        'rgba(241, 196, 15, 1)',
                        'rgba(230, 126, 34, 1)',
                        'rgba(231, 76, 60, 1)'
                    ],
                    borderWidth: 1
                }]
            };
            
            const categoryConfig = {
                type: 'doughnut',
                data: categoryData,
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'bottom',
                        }
                    }
                }
            };
            
            if (categoryChart) {
                categoryChart.destroy();
            }
            
            categoryChart = new Chart(
                document.getElementById('categoryChart'),
                categoryConfig
            );
        }
        
        // Initialize charts with default data
        initCharts();
        
        // Date filter change event
        document.getElementById('date-range').addEventListener('change', function() {
            const dateRange = this.value;
            const customDateRange = document.getElementById('custom-date-range');
            
            if (dateRange === 'custom') {
                customDateRange.style.display = 'inline-flex';
            } else {
                customDateRange.style.display = 'none';
                fetchDashboardData(dateRange);
            }
        });
        
        // Apply custom date range
        document.getElementById('apply-custom-range').addEventListener('click', function() {
            const startDate = document.getElementById('start-date').value;
            const endDate = document.getElementById('end-date').value;
            
            if (startDate && endDate) {
                fetchDashboardData('custom', startDate, endDate);
            } else {
                alert('Vui lòng chọn ngày bắt đầu và kết thúc');
            }
        });
        
        // Function to fetch dashboard data based on date range
        function fetchDashboardData(dateRange, startDate = null, endDate = null) {
            // Show loading state
            document.querySelectorAll('.stat-card .value').forEach(el => {
                el.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
            });
            
            // Prepare query parameters
            let queryParams = `dateRange=${dateRange}`;
            if (dateRange === 'custom') {
                queryParams += `&startDate=${startDate}&endDate=${endDate}`;
            }
            
            // Fetch data from server
            fetch(`/admin/dashboard/data?${queryParams}`)
                .then(response => response.json())
                .then(data => {
                    // Update dashboard with new data
                    document.querySelector('.stat-card.primary .value').innerHTML = 
                        `${data.totalRevenue.toLocaleString('vi-VN')} ₫`;
                    document.querySelector('.stat-card.success .value').innerHTML = 
                        data.totalOrders;
                    document.querySelector('.stat-card.warning .value').innerHTML = 
                        data.totalUsers;
                    document.querySelector('.stat-card.danger .value').innerHTML = 
                        data.pendingOrders;
                    
                    // Update charts
                    initCharts({
                        revenueData: data.revenueData,
                        categoryData: data.categoryData
                    });
                    
                    // Update tables (this would be more complex in a real app)
                    // For this example, we'll just log the data
                    console.log('Data updated for date range:', dateRange);
                })
                .catch(error => {
                    console.error('Error fetching dashboard data:', error);
                    alert('Có lỗi khi tải dữ liệu dashboard. Vui lòng thử lại sau.');
                });
        }
    });
</script>

<!-- <style>
:root {
      --primary-color: #2196f3;
      --primary-color-dark: #0066cc;
      --success-color: #4caf50;
      --danger-color: #f44336;
      --warning-color: #ff9800;
      --info-color: #3498db;
      --confirm-color: #f1c40f;
      --shipped-color: #9c27b0;
      --customer-role-color: #009688;

      --sidebar-bg-start: #23272e;
      --sidebar-bg-end: #2b2d42;
      --sidebar-text-color: #fff;
      --sidebar-link-color: #e0e6ed;
      --sidebar-link-active-text: #fff;
      --sidebar-border-color: #374151;
      --sidebar-icon-color: #a3bffa;
      --sidebar-header-text-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);

      --content-bg: #f5f6fa;
      --card-bg: #fff;
      --table-header-bg: #f3f4f6;
      --table-row-even-bg: #f7fafd;
      --table-row-hover-bg: #f9fafb;
      --product-table-row-hover-bg: #f0f6ff;

      --text-color-dark: #23272e;
      --text-color-light: var(--sidebar-link-color);
      --text-color-muted: #888;
      --text-color-placeholder: #aaa;

      --border-color-light: #f0f0f0;
      --border-color-medium: #e5e7eb;
      --border-color-dark: #e0e0e0;

      --button-secondary-bg: #e0e0e0;
      --button-secondary-text: var(--text-color-dark);

      --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.05);
      --shadow-md: 0 2px 8px rgba(44, 62, 80, 0.06);
      --shadow-lg: 2px 0 16px 0 rgba(44, 62, 80, 0.1);
      --shadow-focus: 0 0 0 2px rgba(33, 150, 243, 0.1);
      --shadow-nav-active: 0 2px 12px 0 rgba(33, 150, 243, 0.08);
      --shadow-mobile-toggle: 0 2px 10px rgba(0, 0, 0, 0.2);

      --radius-sm: 4px;
      --radius-md: 8px;
      --radius-pill: 12px;
      --radius-circle: 50%;
      --radius-sidebar-default: 18px;
      --radius-sidebar-medium: 12px;
      --radius-sidebar-small: 16px;

      --space-xxs: 0.25rem;
      --space-xs: 0.5rem;
      --space-sm: 0.75rem;
      --space-md: 1rem;
      --space-lg: 1.2rem;
      --space-xl: 1.5rem;
      --space-xxl: 2rem;
      --space-xxxl: 2.2rem;

      --font-family-sans: system-ui, -apple-system, BlinkMacSystemFont,
        "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
      --font-size-xs: 0.75rem;
      --font-size-sm: 0.85rem;
      --font-size-smed: 0.9rem;
      --font-size-base: 1rem;
      --font-size-md: 1.08rem;
      --font-size-lg: 1.2rem;
      --font-size-xl: 1.3rem;
      --font-size-xxl: 1.5rem;
      --font-size-xxxl: 1.7rem;
      --font-size-display: 2rem;

      --font-weight-light: 300;
      --font-weight-normal: 400;
      --font-weight-medium: 500;
      --font-weight-semibold: 600;
      --font-weight-bold: 700;
      --font-weight-extrabold: 800;

      --letter-spacing-sm: 0.02em;
      --letter-spacing-lg: 2px;

      --transition-short: 0.18s;
      --transition-medium: 0.2s;
      --transition-long: 0.3s;
    }

    /* Reset and base */
    * {
      box-sizing: border-box;
    }
    body {
      margin: 0;
      font-family: var(--font-family-sans);
      background-color: var(--content-bg);
      color: var(--text-color-dark);
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }

    /* Layout */
    .admin-layout {
      display: flex;
      min-height: 100vh;
      gap: var(--space-xl);
      padding: var(--space-xl);
      background-color: var(--content-bg);
    }

    .admin-content {
      flex: 1;
      display: flex;
      flex-direction: column;
      gap: var(--space-xxl);
      overflow-x: auto;
    }

    /* Header */
    .admin-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
      gap: var(--space-md);
    }

    .admin-header h1 {
      font-size: var(--font-size-display);
      font-weight: var(--font-weight-bold);
      margin: 0;
    }

    .admin-header-actions {
      display: flex;
      align-items: center;
      gap: var(--space-md);
      flex-wrap: wrap;
    }

    /* Date filter */
    .date-filter {
      display: flex;
      align-items: center;
      gap: var(--space-sm);
    }

    .date-filter select,
    .date-filter input[type="date"] {
      padding: 0.4em 0.6em;
      font-size: var(--font-size-base);
      border: 1px solid var(--border-color-dark);
      border-radius: var(--radius-sm);
      background-color: var(--card-bg);
      color: var(--text-color-dark);
      transition: border-color var(--transition-short), box-shadow var(--transition-short);
    }

    .date-filter select:focus,
    .date-filter input[type="date"]:focus {
      outline: none;
      border-color: var(--primary-color);
      box-shadow: var(--shadow-focus);
    }

    #apply-custom-range {
      cursor: pointer;
      background-color: var(--primary-color);
      color: white;
      border: none;
      padding: 0.4em 1em;
      border-radius: var(--radius-sm);
      font-size: var(--font-size-sm);
      font-weight: var(--font-weight-semibold);
      transition: background-color var(--transition-medium);
    }

    #apply-custom-range:hover {
      background-color: var(--primary-color-dark);
    }

    /* Stats Grid */
    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
      gap: var(--space-xl);
    }

    .stat-card {
      background-color: var(--card-bg);
      border-radius: var(--radius-md);
      box-shadow: var(--shadow-sm);
      padding: var(--space-xl);
      display: flex;
      flex-direction: column;
      gap: var(--space-sm);
      border-left: 6px solid transparent;
      transition: box-shadow var(--transition-medium);
    }

    .stat-card:hover {
      box-shadow: var(--shadow-md);
    }

    .stat-card .label {
      font-size: var(--font-size-sm);
      color: var(--text-color-muted);
      font-weight: var(--font-weight-semibold);
      text-transform: uppercase;
      letter-spacing: var(--letter-spacing-sm);
    }

    .stat-card .value {
      font-size: var(--font-size-xxxl);
      font-weight: var(--font-weight-extrabold);
      color: var(--text-color-dark);
    }

    .stat-card .change {
      font-size: var(--font-size-sm);
      color: var(--text-color-muted);
    }

    .stat-card.primary {
      border-left-color: var(--primary-color);
    }

    .stat-card.success {
      border-left-color: var(--success-color);
    }

    .stat-card.warning {
      border-left-color: var(--warning-color);
    }

    .stat-card.danger {
      border-left-color: var(--danger-color);
    }

    /* Cards */
    .admin-card {
      background-color: var(--card-bg);
      border-radius: var(--radius-md);
      box-shadow: var(--shadow-md);
      padding: var(--space-xl) var(--space-xl);
      display: flex;
      flex-direction: column;
      gap: var(--space-lg);
    }

    .card-header {
      border-bottom: 1px solid var(--border-color-light);
      padding-bottom: var(--space-sm);
    }

    .card-header h3 {
      margin: 0;
      font-size: var(--font-size-lg);
      font-weight: var(--font-weight-semibold);
      color: var(--text-color-dark);
    }

    /* Tables */
    .table-responsive {
      width: 100%;
      overflow-x: auto;
    }

    table.data-table {
      width: 100%;
      border-collapse: collapse;
      font-size: var(--font-size-base);
      color: var(--text-color-dark);
      min-width: 700px;
    }

    table.data-table thead tr {
      background-color: var(--table-header-bg);
    }

    table.data-table th,
    table.data-table td {
      padding: 0.75rem 1rem;
      border-bottom: 1px solid var(--border-color-medium);
      white-space: nowrap;
      text-align: left;
      vertical-align: middle;
    }

    table.data-table tbody tr:nth-child(even) {
      background-color: var(--table-row-even-bg);
    }

    table.data-table tbody tr:hover {
      background-color: var(--table-row-hover-bg);
      transition: background-color var(--transition-medium);
    }

    /* Status badges */
    .status-badge {
      display: inline-block;
      padding: 0.2em 0.6em;
      border-radius: var(--radius-pill);
      font-size: var(--font-size-xs);
      font-weight: var(--font-weight-semibold);
      color: white;
      user-select: none;
      white-space: nowrap;
    }

    .status-badge.processing {
      background-color: var(--info-color);
    }

    .status-badge.confirmed {
      background-color: var(--confirm-color);
      color: #222;
    }

    .status-badge.shipped {
      background-color: var(--shipped-color);
    }

    .status-badge.delivered {
      background-color: var(--success-color);
    }

    .status-badge.cancelled {
      background-color: var(--danger-color);
    }

    /* Actions column */
    .actions {
      display: flex;
      gap: var(--space-xs);
      justify-content: center;
    }

    .btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: 0.3em;
      border-radius: var(--radius-sm);
      padding: 0.3em 0.6em;
      font-size: var(--font-size-sm);
      font-weight: var(--font-weight-semibold);
      cursor: pointer;
      border: 1px solid transparent;
      transition: background-color var(--transition-medium), color var(--transition-medium), border-color var(--transition-medium);
      user-select: none;
      text-decoration: none;
      color: var(--text-color-dark);
      background-color: var(--button-secondary-bg);
      border-color: var(--button-secondary-bg);
    }

    .btn-sm {
      font-size: var(--font-size-xs);
      padding: 0.2em 0.5em;
    }

    .btn-primary {
      background-color: var(--primary-color);
      color: white;
      border-color: var(--primary-color);
    }

    .btn-primary:hover,
    .btn-primary:focus {
      background-color: var(--primary-color-dark);
      border-color: var(--primary-color-dark);
      outline: none;
    }

    .btn-outline-primary {
      background-color: transparent;
      color: var(--primary-color);
      border-color: var(--primary-color);
    }

    .btn-outline-primary:hover,
    .btn-outline-primary:focus {
      background-color: var(--primary-color);
      color: white;
      outline: none;
    }

    .btn-outline-danger {
      background-color: transparent;
      color: var(--danger-color);
      border-color: var(--danger-color);
    }

    .btn-outline-danger:hover,
    .btn-outline-danger:focus {
      background-color: var(--danger-color);
      color: white;
      outline: none;
    }

    /* Product cell */
    .product-cell {
      display: flex;
      align-items: center;
      gap: var(--space-sm);
    }

    .product-cell img {
      width: 40px;
      height: 40px;
      object-fit: cover;
      border-radius: var(--radius-sm);
      border: 1px solid var(--border-color-dark);
    }

    /* View all link */
    .view-all {
      margin-top: var(--space-md);
      text-align: right;
    }

    .view-all a {
      color: var(--primary-color);
      font-weight: var(--font-weight-semibold);
      text-decoration: underline;
      cursor: pointer;
      transition: color var(--transition-medium);
    }

    .view-all a:hover,
    .view-all a:focus {
      color: var(--primary-color-dark);
      outline: none;
    }

    /* Responsive */
    @media (max-width: 1024px) {
      .stats-grid {
        grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
      }
      table.data-table {
        min-width: 600px;
      }
    }

    @media (max-width: 768px) {
      .admin-layout {
        flex-direction: column;
        padding: var(--space-lg);
      }
      .stats-grid {
        grid-template-columns: 1fr 1fr;
        gap: var(--space-lg);
      }
      table.data-table {
        min-width: 100%;
        font-size: var(--font-size-sm);
      }
      .admin-header {
        flex-direction: column;
        align-items: flex-start;
        gap: var(--space-md);
      }
      .admin-header-actions {
        width: 100%;
        justify-content: flex-start;
        gap: var(--space-sm);
      }
      .date-filter {
        flex-wrap: wrap;
        gap: var(--space-xs);
      }
    }

    @media (max-width: 480px) {
      .stats-grid {
        grid-template-columns: 1fr;
      }
      .date-filter {
        flex-direction: column;
        align-items: flex-start;
      }
      .date-filter select,
      .date-filter input[type="date"],
      #apply-custom-range {
        width: 100%;
      }
      .actions {
        justify-content: flex-start;
      }
    }
</style> -->
